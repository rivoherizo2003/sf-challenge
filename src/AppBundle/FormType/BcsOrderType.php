<?php
namespace AppBundle\FormType;
use AppBundle\Entity\BcsBrand;
use AppBundle\Entity\BcsItem;
use AppBundle\Entity\BcsMovement;
use AppBundle\Entity\BcsOrder;
use AppBundle\Entity\BcsSupplier;
use AppBundle\Entity\BcsTypeMovement;
use AppBundle\Repository\BcsOrderRepository;
use Doctrine\ORM\EntityRepository;
use Symfony\Bridge\Doctrine\Form\Type\EntityType;
use Symfony\Component\Form\AbstractType;
use Symfony\Component\Form\Extension\Core\Type\CheckboxType;
use Symfony\Component\Form\Extension\Core\Type\CollectionType;
use Symfony\Component\Form\Extension\Core\Type\DateType;
use Symfony\Component\Form\Extension\Core\Type\EmailType;
use Symfony\Component\Form\Extension\Core\Type\TextareaType;
use Symfony\Component\Form\FormBuilderInterface;
use Symfony\Component\Form\FormEvent;
use Symfony\Component\Form\FormEvents;
use Symfony\Component\Form\FormInterface;
use Symfony\Component\OptionsResolver\OptionsResolver;
use Symfony\Component\Translation\TranslatorInterface;
use Symfony\Component\Validator\Constraints\Valid;

/**
 * Created by PhpStorm.
 * User: Zo
 * Date: 20/04/2018
 * Time: 09:23
 */
class BcsOrderType extends AbstractType
{
	/**
	 * @var TranslatorInterface
	 */
	protected $g_trTranslator;

	public function buildForm(FormBuilderInterface $builder, array $options)
	{
		parent::buildForm($builder, $options); // TODO: Change the autogenerated stub

		$builder
			->add("ordComment", TextareaType::class, [
			    'required' => false,
                'translation_domain'=>'translations'
            ])
            ->add('ordIsDraft', CheckboxType::class, array(
                'label'    => 'form.draft_label_checkbox',
                'required' => false,
                'attr' => ['checked' => true],
                'translation_domain' => 'translations'
            ))
            ->add('ordOrderDetailLists', CollectionType::class, array(
                    'entry_type' => BcsOrderDetailType::class,
                    'prototype' => true,
                    'entry_options' => array('label' => false),
                    'allow_add' => true,
                    'allow_delete' => true,
                    'constraints' => new Valid(),
                    'by_reference' => false,
                    'translation_domain'=>'translations'
                )
            )
			;
	}

	public function configureOptions(OptionsResolver $resolver)
	{
		parent::configureOptions($resolver); // TODO: Change the autogenerated stub
		$resolver->setDefaults(
			array(
				'data_class' => BcsOrder::class,
				'csrf_protection' => true,
				'allow_extra_fields' => true,
				'csrf_field_name' => '_token',
				'translation_domain' => 'translations',
				// a unique key to help generate the secret token
				'csrf_token_id'   => 'task_item',
			)
		);
	}
}